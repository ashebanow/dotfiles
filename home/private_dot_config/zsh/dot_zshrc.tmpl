
# -----------------------------------------------------
# HISTORY, COMMAND HELP, ETC.
# -----------------------------------------------------
setopt histignorealldups sharehistory

typeset -U path cdpath fpath manpath

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
if command -v dircolors &> /dev/null; then
  eval "$(dircolors -b)"
fi
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# History options should be set in .zshrc and after oh-my-zsh sourcing.
HISTSIZE="10000"
SAVEHIST="10000"
HISTFILE="$HOME/.zsh_history"

mkdir -p "$(dirname "$HISTFILE")"
setopt HIST_FCNTL_LOCK
setopt HIST_IGNORE_DUPS
unsetopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
unsetopt HIST_EXPIRE_DUPS_FIRST
setopt SHARE_HISTORY
unsetopt EXTENDED_HISTORY

export MANPAGER='nvim +Man!'

# -----------------------------------------------------
# MANUAL INITIALIZATION
# -----------------------------------------------------

## NOTE: that the bling here is designed to be run from bash OR zsh.
### bling.sh source start
test -f /usr/share/ublue-os/bluefin-cli/bling.sh && source /usr/share/ublue-os/bluefin-cli/bling.sh
### bling.sh source end

if [[ -v WSL_DISTRO_NAME ]]; then
  alias code="/mnt/c/Users/A\ Shebanow/AppData/Local/Programs/Microsoft\ VS\ Code\ Insiders/bin/code-insiders"
fi

if command -v atuin &> /dev/null; then
  eval "$(atuin init zsh)"
fi

if command -v bat &> /dev/null; then
  alias cat='bat --paging=never --style=plain'
  alias more='bat'
fi

if command -v chezmoi &> /dev/null; then
  alias c='chezmoi'
  alias ca='chezmoi apply'
  alias cadd='chezmoi add'
  alias cdc="cd $HOME/.local/share/chezmoi"
  alias cdccfg="cd $HOME/.local/share/chezmoi/home/private_dot_config"
  alias cdclocal="cd $HOME/.local/share/chezmoi/home/private_dot_local"
  alias cdiff='chezmoi diff'
  alias ce='chezmoi edit'
  alias cea='chezmoi edit --apply'
  alias ci='chezmoi init'
fi

if command -v delta &> /dev/null; then
  alias diff='delta'
fi

if command -v devbox &> /dev/null; then
  eval "$(devbox completion zsh)"
fi

if [[ -f $HOME/.dircolors/dircolors ]]; then
  eval $(dircolors $HOME/.dircolors/dircolors)
fi

if command -v direnv &> /dev/null; then
  eval "$(direnv hook zsh)"
fi

if command -v duf &> /dev/null; then
  alias df='duf --only local'
fi

if command -v eza &> /dev/null; then
  alias eza='eza --icons --group-directories-first'
  alias ls='eza'
  alias la='eza -a'
  alias ll='eza -l'
  alias lla='eza -al'
  alias ldot='eza -d .??*'
  alias -g ldd='eza -D --sort=mod'    # list directories, sort, descending, MODIFIED
  alias -g ldn='eza -Dr'              # list directories, sort, descending, NAME
  alias -g lsD='eza -r --sort=mod'    # sort, ascending, MODIFIED
  alias -g lsN='eza -r'               # sort, ascending, name
  alias -g lsS='eza -r --sort=size'   # sort, ascending, size
  alias -g lsd='eza --sort=mod'       # sort, descending, MODIFIED
  alias -g lsn='eza'                  # sort, descending, NAME
  alias -g lss='eza --sort=size'      # sort, descending, SIZE
  alias -g lst='eza --tree --level=2' # sort, descending, NAME && show directory tree
fi

#### FZF
# See https://github.com/catppuccin/fzf for theming info and other
# catppucin variants.
if command -v fzf &> /dev/null; then
  export FZF_DEFAULT_OPTS=" \
  --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

  source <(fzf --zsh)

  alias v="fd --type f --hidden --exclude .git | fzf --preview 'bat {1}' | xargs vi"
fi

if command -v gh &> /dev/null; then
  eval "$(gh completion -s zsh)"
  if ! gh extension list | grep -q gh-copilot; then
    eval "$(gh copilot alias -- zsh)"
  fi
fi

if command -v jj &> /dev/null; then
  alias jjdesc='jj describe'
  alias jjfetch='jj git fetch'
  alias jjlog='jj log'
  alias jjmain='jj bookmark set main --allow-backwards -r @'
  alias jjmainback='jj bookmark set main --allow-backwards -r @-'
  alias jjmark='jj bookmark'
  alias jjmarknew='jj bookmark new'
  alias jjmarkset='jj bookmark set'
  alias jjnew='jj new'
  alias jjpush='jj git push'
  alias jjst='jj st'

  source <(COMPLETE=zsh jj)
fi

if command -v just &> /dev/null; then
  alias gust='just -g'
  if command -v ujust &> /dev/null; then
    alias ujc='ujust --choose'
  fi
fi

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

if command -v op &> /dev/null; then
  eval "$(op completion zsh)"
  compdef _op op
fi

if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

if command -v tailscale &> /dev/null; then
  eval "$(tailscale completion zsh)"

  alias tsa='tailscale status --active'
fi

if command -v thefuck &> /dev/null; then
  eval "$(thefuck --alias)"
fi

if command -v tmux &> /dev/null; then
{{ if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "idLike") (eq .chezmoi.osRelease.idLike "arch")) -}}
  export TMUX_PLUGIN_MANAGER_PATH="/usr/share/tmux-plugin-manager"
{{- else }}
  # on fedora, darwin, etc assume brew for now...
  export TMUX_PLUGIN_MANAGER_PATH="$(brew --prefix tpm)/share/tpm"
{{ end }}
fi

if command -v zoxide &> /dev/null; then
  eval "$(zoxide init zsh)"
  alias cd='z'
fi

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main cursor)
typeset -gA ZSH_HIGHLIGHT_STYLES
if [[ -f $HOME/.config/zsh/catppuccin_mocha-zsh-syntax-highlighting.zsh ]]; then
  source $HOME/.config/zsh/catppuccin_mocha-zsh-syntax-highlighting.zsh
# elif [[ -f $HOME/.config/zsh/dracula-zsh-syntax-highlighting.zsh ]]; then
#  source $HOME/.config/zsh/dracula-zsh-syntax-highlighting.zsh
fi

# Miscellaneous Aliases - ideally these should work on any unix-like system
alias cls='clear'
alias cp='cp -vi'
alias cpv='rsync -avh --info=progress2'
alias diskspace='df -hl'
alias gst='git status -sb'
alias mkdir='mkdir -pv'
alias mv='mv -vi'
alias nano='vi'
alias vi='nvim'

# -----------------------------------------------------
# UTILITY FUNCTIONS
# -----------------------------------------------------

# do sudo, or sudo the last command if no argument given
s() {
  if [[ $# == 0 ]]; then
    sudo $(fc -ln -1)
  else
    sudo "$@"
  fi
}

source "$HOME/.local/bin/extract"

#show fastfetch info on startup
if command -v fastfetch &> /dev/null; then
  fastfetch
fi
