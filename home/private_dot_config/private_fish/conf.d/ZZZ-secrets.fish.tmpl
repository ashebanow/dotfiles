#############################################################################
# Password/Secret Management

set -U BITWARDEN_EMAIL ashebanow@cattivi.com

{{ if .headless }}
# we only define Bitwarden's service accounts on headless systems
set -Ux BWS_ACCESS_TOKEN "{{ (bitwarden "BW Limon BWS Access Token" "login").password }}"
{{- end -}}

# Function to ensure bitwarden session is available
function ensure_bw_session
    if not set -q BW_SESSION; or test -z "$BW_SESSION"; or not BW_SESSION="$BW_SESSION" bw status >/dev/null 2>&1
        if test -x "$HOME/.local/bin/bw-open"
            set -gx BW_SESSION (bw-open)
            return $status
        else
            return 1
        end
    end
    return 0
end

# Function to safely get bitwarden secrets
function bw_get_secret
    set secret_name $argv[1]
    if ensure_bw_session
        bw get password "$secret_name" 2>/dev/null; or echo ""
    else
        echo ""
    end
end

# Set up secrets that other tools expect (only if in interactive environment)
if status is-interactive; and test -n "$DISPLAY$SSH_TTY"
    set -gx ZED_GITHUB_PERSONAL_ACCESS_TOKEN (bw_get_secret zed_github_access_token)
end

# set up env variable for ssh-agent
set -x SSH_AUTH_SOCK "{{- .chezmoi.homeDir -}}/.bitwarden-ssh-agent.sock"
if not test -S "$SSH_AUTH_SOCK"
    echo "WARNING: SSH Agent socket does not exist!"
    echo "Path: {{- .chezmoi.homeDir -}}/.bitwarden-ssh-agent.sock"
end
