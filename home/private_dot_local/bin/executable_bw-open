#!/usr/bin/env bash
#
# Bitwarden session management script - now uses keyring-based session manager
#
# Log in to and unlock Bitwarden CLI using persistent keyring storage.
#
# Usage (sh/zsh/bash):
#
#     BW_SESSION=$(bw-open [EMAIL])
#     export BW_SESSION
#
# Usage (fish):
#
#     set -x BW_SESSION (bw-open [EMAIL])

# Check if we already have a valid session
if [[ -n "${BW_SESSION:-}" ]]; then
    # Test if current session is still valid
    if BW_SESSION="$BW_SESSION" bw status >/dev/null 2>&1; then
        echo "$BW_SESSION"
        exit 0
    fi
fi

# Try to get session from our session manager
SESSION_MANAGER="$HOME/.local/bin/bw-session-manager"

if [[ -x "$SESSION_MANAGER" ]]; then
    # Use the keyring-based session manager
    if [[ -n "${1:-}" ]]; then
        # If email provided, set it temporarily
        BITWARDEN_EMAIL="$1" "$SESSION_MANAGER" ensure
    else
        "$SESSION_MANAGER" ensure
    fi
else
    # Fallback to old behavior if session manager not available
    if [[ -z "${BW_SESSION:-}" ]]; then
        if ! bw login --check &>/dev/null; then
            if [[ -z "${1:-}" ]]; then
                echo "Error: Email required for login" >&2
                exit 1
            fi
            IFS= read -rsp 'Bitwarden master password: ' BW_PASSWORD
            echo >&2
            BW_SESSION="$(bw login --raw "$1" "$BW_PASSWORD")"
        else
            if ! bw unlock --check &>/dev/null; then
                IFS= read -rsp 'Bitwarden master password: ' BW_PASSWORD
                echo >&2
                BW_SESSION="$(bw unlock --raw "$BW_PASSWORD")"
            fi
        fi
        echo "$BW_SESSION"
    fi
fi
