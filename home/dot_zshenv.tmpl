---@type zsh
#pri "Evaluating ~/.zshenv"
#set -x

warning_color=yellow
error_color=red

#############################################################################
# environment variables

export EDITOR=nvim
export SHELL=`which zsh`
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export ZDOTDIR=$XDG_CONFIG_HOME/zsh
export DOTFILES=$HOME/.local/share/chezmoi
export BUN_INSTALL="$HOME/.bun"

#############################################################################
# INITIALIZE HOMEBREW (wherever it lives)

if [[ -x /home/linuxbrew/.linuxbrew/bin/brew ]]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [[ -x /opt/homebrew/bin/brew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  print -P "%F{$warning_color}Homebrew not installed, but chezmoi should have installed it!%f\n"
fi

#############################################################################
# INITIALIZE NIX

NIX_PROFILE_FILE_SUFFIX="etc/profile.d/nix-daemon.sh"
if [ -f "/nix/var/nix/profiles/default/${NIX_PROFILE_FILE_SUFFIX}" ]; then
  source "/nix/var/nix/profiles/default/${NIX_PROFILE_FILE_SUFFIX}"
elif [ -f "$HOME/.nix-profile/${NIX_PROFILE_FILE_SUFFIX}" ]; then
  source "$HOME/.nix-profile/${NIX_PROFILE_FILE_SUFFIX}"
fi

#############################################################################
# Path Management
function addToPathIfNeeded {
  new_path="$1"
  if [[ -d $new_path ]]; then
    export PATH="$PATH:$new_path"
  fi
}

addToPathIfNeeded "$HOME/.local/bin"
addToPathIfNeeded "$HOME/.cargo/bin"
addToPathIfNeeded "$BUN_INSTALL/bin"

#############################################################################
# Password/Secret Management

# prefer installed version if available
if [ -f {{ .chezmoi.homeDir -}}/.local/bin/bw-open ]; then
  BW_OPEN="{{- .chezmoi.homeDir -}}/.local/bin/bw-open"
else
  BW_OPEN="{{- .chezmoi.config.sourceDir -}}/home/private_dot_local/bin/executable_bw-open"
fi

BITWARDEN_EMAIL=ashebanow@cattivi.com

{{ if .headless }}
# we only define Bitwarden's service accounts on headless systems
export BWS_ACCESS_TOKEN="{{- (bitwarden "BW Limon BWS Access Token" "login").password -}}"
{{ end }}

# some secrets need access from elsewhere
export ZED_GITHUB_PERSONAL_ACCESS_TOKEN="$(bw get password zed_github_access_token)"

# set up env variable for ssh-agent
export SSH_AUTH_SOCK="{{- .chezmoi.homeDir -}}/.bitwarden-ssh-agent.sock"
if [ ! -S "${SSH_AUTH_SOCK}" ]; then
  print -P "%F{$warning_color}WARNING: No SSH Agent socket at: ${SSH_AUTH_SOCK}%f\n"
fi
