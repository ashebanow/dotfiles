#echo "Evaluating ~/.zshenv"
#set -x

warning_color=yellow
error_color=red

#############################################################################
# environment variables

export EDITOR=nvim
export SHELL=`which zsh`
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export ZDOTDIR=$XDG_CONFIG_HOME/zsh
export DOTFILES=$HOME/.local/share/chezmoi
export BUN_INSTALL="$HOME/.bun"

#############################################################################
# INITIALIZE HOMEBREW (wherever it lives)

if [[ -x /home/linuxbrew/.linuxbrew/bin/brew ]]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [[ -x /opt/homebrew/bin/brew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  print -P "%F{$warning_color}Homebrew not installed, but chezmoi should have installed it!%f\n"
fi

#############################################################################
# INITIALIZE NIX

NIX_PROFILE_FILE_SUFFIX="etc/profile.d/nix-daemon.sh"
if [ -f "/nix/var/nix/profiles/default/${NIX_PROFILE_FILE_SUFFIX}" ]; then
  source "/nix/var/nix/profiles/default/${NIX_PROFILE_FILE_SUFFIX}"
elif [ -f "$HOME/.nix-profile/${NIX_PROFILE_FILE_SUFFIX}" ]; then
  source "$HOME/.nix-profile/${NIX_PROFILE_FILE_SUFFIX}"
fi

#############################################################################
# Path Management
function addToPathIfNeeded {
  new_path="$1"
  if [[ -d $new_path ]]; then
    export PATH="$PATH:$new_path"
  fi
}

addToPathIfNeeded "$HOME/.local/bin"
addToPathIfNeeded "$HOME/.cargo/bin"
addToPathIfNeeded "$BUN_INSTALL/bin"
addToPathIfNeeded "$HOME/.npm-global/bin"

#############################################################################
# Password/Secret Management

export BITWARDEN_EMAIL=ashebanow@cattivi.com

{{ if .headless }}
# we only define Bitwarden's service accounts on headless systems
export BWS_ACCESS_TOKEN="{{- (bitwarden "item" "BW Limon BWS Access Token").login.password -}}"
{{ end }}

# Function to ensure bitwarden session is available
ensure_bw_session() {
  if [[ -z "${BW_SESSION:-}" ]] || ! BW_SESSION="$BW_SESSION" bw status >/dev/null 2>&1; then
    if [[ -x "$HOME/.local/bin/bw-open" ]]; then
      export BW_SESSION=$(bw-open)
    else
      return 1
    fi
  fi
}

# Function to safely get bitwarden secrets
bw_get_secret() {
  local secret_name="$1"
  if ensure_bw_session; then
    bw get password "$secret_name" 2>/dev/null || echo ""
  else
    echo ""
  fi
}

# Set up secrets that other tools expect (only if in interactive environment)
if [[ -n "${DISPLAY:-}${SSH_TTY:-}" ]]; then
  export ZED_GITHUB_PERSONAL_ACCESS_TOKEN="$(bw_get_secret zed_github_access_token)"
fi

# set up env variable for ssh-agent
export SSH_AUTH_SOCK="{{- .chezmoi.homeDir -}}/.bitwarden-ssh-agent.sock"
if [ ! -S "${SSH_AUTH_SOCK}" ]; then
  print -P "%F{$warning_color}WARNING: No SSH Agent socket at: ${SSH_AUTH_SOCK}%f\n"
fi
