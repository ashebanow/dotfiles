#!/bin/bash

# install necessary packages for all platforms
if ! command -v brew ; then
  echo "Brew must be preinstalled before initializing these dotfiles"
  exit 1
fi

echo "Installing Brews..."
brew update-if-needed
brew bundle install --upgrade --file="{{- .chezmoi.config.sourceDir -}}/Brewfile"

echo "Installing VSCode Extensions..."
cat "{{- .chezmoi.config.sourceDir -}}/VSExtensionsFile" | xargs -L 1 echo code --install-extension --force

{{- if eq .chezmoi.os "linux" -}}

# TODO: new strategy for package management
#
# Use nix (not nixos) for most package management, on all linux platforms
# only use system packages for essentials: window managers/desktop environments,
# secret management, ssh, and hardware.
#
# only use brew when it can't be avoided.

# {{- if 0 -}}
# brew bundle install --upgrade --file=/dev/stdin <<EOF
# {{ range .packages.linux.nixpkgs -}}
#   nix profile install "nixpkgs#{{ . }}"
# {{ end -}}
# EOF
# {{ end -}}

echo "Installing flatpaks..."
readarray -t flatpaks_list < "{{- .chezmoi.config.sourceDir -}}/Flatfile"
echo $flatpaks_list[@]
flatpak install --user -y --noninteractive --or-update "${flatpaks_list[@]}"

{{- if (or
         (and
           (hasKey .chezmoi.osRelease "idLike")
           (eq .chezmoi.osRelease.idLike "arch"))
         (eq .chezmoi.osRelease.id "arch")) -}}

# make sure system is up to date
echo "Updating Arch packages..."
yay -Syu

# ideally, there would be a single yay command here, or even
# a small number of role-themed sets of packages
echo "Installing Arch packages..."
{{ range .packages.linux.arch -}}
  yay -S --needed --noconfirm "{{ . }}"
{{ end -}}

{{- end }}

{{- else if eq .chezmoi.os "darwin" -}}

# Load mac only brews and casks
echo "Installing Mac-specific Brews and Casks..."
brew bundle install --upgrade --file="{{- .chezmoi.config.sourceDir -}}/Brewfile-darwin"

{{- else }}

echo "unknown os: " + {{- .chezmoi.os  }}
exit 1

{{ end }}

# TODO: setup tailscale and auth

# setup/update github copilot extension
if command -v gh; then
  echo "Installing GitHub CLI Copilot extensions..."
  if $(gh extension list | grep -q gh-copilot); then
    gh extension upgrade github/gh-copilot
  else
    gh extension install github/gh-copilot
  fi
fi
